// import 'package:flutter/foundation.dart';
// import 'package:flutter/material.dart';
// import 'package:get/get.dart';

// class XMaterialApp extends GetMaterialApp {
 

//   XMaterialApp.router({
//     GlobalKey<NavigatorState>? navigatorKey,
//     GlobalKey<ScaffoldMessengerState>? scaffoldMessengerKey,
//     Widget? home,
//     Map<String, WidgetBuilder>? routes,
//     String? initialRoute,
//     RouteFactory? onGenerateRoute,
//     InitialRouteListFactory? onGenerateInitialRoutes,
//     RouteFactory? onUnknownRoute,
//     List<NavigatorObserver>? navigatorObservers,
//     TransitionBuilder? builder,
//     required String title,
//     GenerateAppTitle? onGenerateTitle,
//     ThemeData? theme,
//     ThemeData? darkTheme,
//     ThemeMode themeMode = ThemeMode.light,
//     CustomTransition? customTransition,
//     Color? color,
//     Map<String, Map<String, String>>? translationsKeys,
//     Translations? translations,
//     TextDirection? textDirection,
//     Locale? locale,
//     Locale? fallbackLocale,
//     Iterable<LocalizationsDelegate<dynamic>>? localizationsDelegates,
//     LocaleListResolutionCallback? localeListResolutionCallback,
//     LocaleResolutionCallback? localeResolutionCallback,
//     Iterable<Locale> supportedLocales,
//     bool showPerformanceOverlay,
//     bool checkerboardRasterCacheImages,
//     bool checkerboardOffscreenLayers,
//     bool showSemanticsDebugger,
//     bool debugShowCheckedModeBanner,
//     Map<LogicalKeySet, Intent>? shortcuts,
//     ScrollBehavior? scrollBehavior,
//     ThemeData? highContrastTheme,
//     ThemeData? highContrastDarkTheme,
//     Map<Type, Action<Intent>>? actions,
//     bool debugShowMaterialGrid,
//     ValueChanged<Routing?>? routingCallback,
//     Transition? defaultTransition,
//     bool? opaqueRoute,
//     VoidCallback? onInit,
//     VoidCallback? onReady,
//     VoidCallback? onDispose,
//     bool? enableLog,
//     LogWriterCallback? logWriterCallback,
//     bool? popGesture,
//     SmartManagement smartManagement,
//     Bindings? initialBinding,
//     Duration? transitionDuration,
//     bool? defaultGlobalState,
//     List<GetPage>? getPages,
//     GetPage? unknownRoute,
//     RouteInformationProvider? routeInformationProvider,
//     RouteInformationParser<Object>? routeInformationParser,
//     RouterDelegate<Object>? routerDelegate,
//     BackButtonDispatcher? backButtonDispatcher,
//     bool useInheritedMediaQuery,
//   }) : super.router(
//           key: key,
//           routeInformationProvider: routeInformationProvider,
//           scaffoldMessengerKey: scaffoldMessengerKey,
//           routeInformationParser: routeInformationParser,
//           routerDelegate: routerDelegate,
//           backButtonDispatcher: backButtonDispatcher,
//           builder: builder,
//           title: title = '',
//           onGenerateTitle: onGenerateTitle,
//           color: color,
//           theme: theme,
//           darkTheme: darkTheme,
//           useInheritedMediaQuery: useInheritedMediaQuery,
//           highContrastTheme: highContrastTheme,
//           highContrastDarkTheme: highContrastDarkTheme,
//           themeMode: themeMode,
//           locale: locale,
//           localizationsDelegates: localizationsDelegates,
//           localeListResolutionCallback: localeListResolutionCallback,
//           localeResolutionCallback: localeResolutionCallback,
//           supportedLocales: supportedLocales,
//           debugShowMaterialGrid: debugShowMaterialGrid,
//           showPerformanceOverlay: showPerformanceOverlay,
//           checkerboardRasterCacheImages: checkerboardRasterCacheImages,
//           checkerboardOffscreenLayers: checkerboardOffscreenLayers,
//           showSemanticsDebugger: showSemanticsDebugger,
//           debugShowCheckedModeBanner: debugShowCheckedModeBanner,
//           shortcuts: shortcuts,
//           scrollBehavior: scrollBehavior,
//           actions: actions,
//           customTransition: customTransition,
//           translationsKeys: translationsKeys,
//           translations: translations,
//           textDirection: textDirection,
//           fallbackLocale: fallbackLocale,
//           routingCallback: routingCallback,
//           defaultTransition: defaultTransition,
//           opaqueRoute: opaqueRoute,
//           onInit: onInit,
//           onReady: onReady,
//           onDispose: onDispose,
//           enableLog: enableLog = kDebugMode,
//           logWriterCallback: logWriterCallback,
//           popGesture: popGesture,
//           smartManagement: smartManagement,
//           initialBinding: initialBinding,
//           transitionDuration: transitionDuration,
//           defaultGlobalState: defaultGlobalState,
//           getPages: getPages,
//           navigatorObservers: navigatorObservers,
//           unknownRoute: unknownRoute,
//         );
// }
